{"ast":null,"code":"var _jsxFileName = \"/Users/manojkrishnadamle/Downloads/temp-edit-folder-assignment-3/src/components/Signin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Container, Typography, TextField, Button, Grid } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { signIn } from './auth';\n\n// function SignIn() {\n//     const navigate = useNavigate()\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n//     // Authenticate user\n//     const user = users.find(user => user.email === formData.email && user.password === formData.password && !user.disabled);\n\n//     if (user) {\n//       console.log('User signed in:', formData);\n\n//       // Redirect to home page or dashboard here\n\n//       signIn();\n//       localStorage.setItem('userName', user.name);\n//       if (user.email.includes('@moderator.com')) {\n//         // If the user's email includes '@moderator.com', set them as a moderator.\n//         localStorage.setItem('isModerator', 'true');\n//       } else {\n//         // For any other email, ensure the user is not set as a moderator.\n//         localStorage.setItem('isModerator', 'false');\n//       }\n//       if (user.email.includes('@admin.com')) {\n//         // If the user's email includes '@moderator.com', set them as a moderator.\n//         localStorage.setItem('isAdmin', 'true');\n//       } else {\n//         // For any other email, ensure the user is not set as a moderator.\n//         localStorage.setItem('isAdmin', 'false');\n//       }\n\n//       navigate('/')\n//     } else {\n//       alert('Invalid email or password! or Admin has disabled your account');\n//     }\n//   };\n\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <div style={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign In Page\n//         </Typography>\n//         <form onSubmit={handleSubmit} style={{ mt: 3 }}>\n//           <Grid container spacing={2}>\n\n//             <Grid item xs={12}>\n//               <TextField\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"Email Address\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n//             <Grid item xs={12}>\n//               <TextField\n//                 required\n//                 fullWidth\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"new-password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n//           </Grid>\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//           >\n//             Sign In\n//           </Button>\n//         </form>\n//         <Button fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2, bgcolor: 'green', '&:hover': { bgcolor: 'darkgreen' } }} onClick={() => {\n//                 navigate('/signup')\n//           ;\n//         }}> Don't Have an account ? Sign up </Button>\n//       </div>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Grid, Card, CardContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { signIn } from './auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const user = users.find(user => user.email === formData.email && user.password === formData.password && !user.disabled);\n    if (user) {\n      signIn(); // Assuming signIn function sets authentication status\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isModerator', user.email.includes('@moderator.com') ? 'true' : 'false');\n      localStorage.setItem('isAdmin', user.email.includes('@admin.com') ? 'true' : 'false');\n      navigate('/');\n    } else {\n      alert('Invalid email or password, or your account may be disabled.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    sx: {\n      mt: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            mb: 3\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                value: formData.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                value: formData.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          sx: {\n            mt: 2,\n            mb: 2,\n            bgcolor: 'cyan'\n          },\n          onClick: () => navigate('/signup'),\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"xFW96vhS3+3Mz7ZN0/sAzJGuobA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Grid","Card","CardContent","useNavigate","signIn","jsxDEV","_jsxDEV","SignIn","_s","navigate","formData","setFormData","email","password","handleChange","e","name","value","target","prevFormData","handleSubmit","preventDefault","users","JSON","parse","localStorage","getItem","user","find","disabled","setItem","includes","alert","component","maxWidth","sx","mt","children","elevation","display","flexDirection","alignItems","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","container","spacing","item","xs","required","fullWidth","id","label","autoComplete","onChange","type","bgcolor","onClick","_c","$RefreshReg$"],"sources":["/Users/manojkrishnadamle/Downloads/temp-edit-folder-assignment-3/src/components/Signin.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Container, Typography, TextField, Button, Grid } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { signIn } from './auth';\n\n// function SignIn() {\n//     const navigate = useNavigate()\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevFormData) => ({\n//       ...prevFormData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const users = JSON.parse(localStorage.getItem('users') || '[]');\n    \n//     // Authenticate user\n//     const user = users.find(user => user.email === formData.email && user.password === formData.password && !user.disabled);\n    \n//     if (user) {\n//       console.log('User signed in:', formData);\n\n//       // Redirect to home page or dashboard here\n      \n//       signIn();\n//       localStorage.setItem('userName', user.name);\n//       if (user.email.includes('@moderator.com')) {\n//         // If the user's email includes '@moderator.com', set them as a moderator.\n//         localStorage.setItem('isModerator', 'true');\n//       } else {\n//         // For any other email, ensure the user is not set as a moderator.\n//         localStorage.setItem('isModerator', 'false');\n//       }\n//       if (user.email.includes('@admin.com')) {\n//         // If the user's email includes '@moderator.com', set them as a moderator.\n//         localStorage.setItem('isAdmin', 'true');\n//       } else {\n//         // For any other email, ensure the user is not set as a moderator.\n//         localStorage.setItem('isAdmin', 'false');\n//       }\n\n//       navigate('/')\n//     } else {\n//       alert('Invalid email or password! or Admin has disabled your account');\n//     }\n//   };\n  \n\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <div style={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Sign In Page\n//         </Typography>\n//         <form onSubmit={handleSubmit} style={{ mt: 3 }}>\n//           <Grid container spacing={2}>\n           \n//             <Grid item xs={12}>\n//               <TextField\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"Email Address\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n//             <Grid item xs={12}>\n//               <TextField\n//                 required\n//                 fullWidth\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"new-password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n//           </Grid>\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//           >\n//             Sign In\n//           </Button>\n//         </form>\n//         <Button fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2, bgcolor: 'green', '&:hover': { bgcolor: 'darkgreen' } }} onClick={() => {\n//                 navigate('/signup')\n//           ;\n//         }}> Don't Have an account ? Sign up </Button>\n//       </div>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Grid, Card, CardContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { signIn } from './auth';\n\nfunction SignIn() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const user = users.find(user => user.email === formData.email && user.password === formData.password && !user.disabled);\n\n    if (user) {\n      signIn(); // Assuming signIn function sets authentication status\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isModerator', user.email.includes('@moderator.com') ? 'true' : 'false');\n      localStorage.setItem('isAdmin', user.email.includes('@admin.com') ? 'true' : 'false');\n\n      navigate('/');\n    } else {\n      alert('Invalid email or password, or your account may be disabled.');\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 8 }}>\n      <Card elevation={3}>\n        <CardContent sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\n            Sign In\n          </Typography>\n          <form onSubmit={handleSubmit} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </form>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            sx={{ mt: 2, mb: 2, bgcolor: 'cyan'}}\n            onClick={() => navigate('/signup')}\n          >\n            Don't have an account? Sign Up\n          </Button>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default SignIn;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}