{"ast":null,"code":"var _jsxFileName = \"/Users/manojkrishnadamle/Downloads/Blog-websiteFolder-assignment-3/src/components/Admin.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Button, List, ListItem, ListItemText, Switch } from '@mui/material';\n\n// function AdminPanel() {\n//   const [accounts, setAccounts] = useState([]);\n\n//   useEffect(() => {\n//     // Load accounts from Local Storage\n//     const loadedAccounts = JSON.parse(localStorage.getItem('users')) || [];\n//     setAccounts(loadedAccounts);\n//   }, []);\n\n//   const toggleAccountStatus = (email) => {\n//     // const accounts = JSON.parse(localStorage.getItem('users')) || [];\n//     const updatedAccounts = accounts.map(account => {\n//       if (account.email === email) {\n//         return { ...account, disabled: !account.disabled };\n//       }\n//       return account;\n//     });\n\n//     localStorage.setItem('users', JSON.stringify(updatedAccounts));\n//   };\n\n//   const handleToggle = (email) => {\n//     toggleAccountStatus(email);\n//     // Refresh accounts list\n//     setAccounts(JSON.parse(localStorage.getItem('users')) || []);\n//   };\n\n//   console.log(accounts)\n\n//   return (\n//     <List>\n//       {accounts.map((account, index) => (\n//         <ListItem key={index}>\n//           <ListItemText primary={account.email} secondary={account.disabled ? 'Disabled' : 'Enabled'} />\n//           <Switch\n//             checked={!account.disabled}\n//             onChange={() => handleToggle(account.email)}\n//             color=\"primary\"\n//           />\n//         </ListItem>\n//       ))}\n//     </List>\n//   );\n// }\n\n// export default AdminPanel;\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Card, CardContent, List, ListItem, ListItemText, Switch, Divider, Container, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Load accounts from Local Storage\n    const loadedAccounts = JSON.parse(localStorage.getItem('users')) || [];\n    setAccounts(loadedAccounts);\n  }, []);\n  const toggleAccountStatus = email => {\n    const updatedAccounts = accounts.map(account => {\n      if (account.email === email) {\n        return {\n          ...account,\n          disabled: !account.disabled\n        };\n      }\n      return account;\n    });\n    localStorage.setItem('users', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts); // Update state to reflect changes\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      sx: {\n        marginTop: 4,\n        textAlign: 'center'\n      },\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      raised: true,\n      sx: {\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Users Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: accounts.map((account, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: account.email,\n                secondary: account.disabled ? 'Disabled' : 'Enabled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                checked: !account.disabled,\n                onChange: () => toggleAccountStatus(account.email),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), index < accounts.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 49\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => navigate('/'),\n      sx: {\n        marginBottom: 2,\n        marginTop: 3\n      },\n      children: \"Back to Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"ighehxbgwgIEyip+d6EkXl6JGgg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Card","CardContent","List","ListItem","ListItemText","Switch","Divider","Container","Button","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","accounts","setAccounts","navigate","loadedAccounts","JSON","parse","localStorage","getItem","toggleAccountStatus","email","updatedAccounts","map","account","disabled","setItem","stringify","maxWidth","children","variant","component","gutterBottom","sx","marginTop","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","raised","fontWeight","index","Fragment","primary","secondary","checked","onChange","color","length","onClick","marginBottom","_c","$RefreshReg$"],"sources":["/Users/manojkrishnadamle/Downloads/Blog-websiteFolder-assignment-3/src/components/Admin.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Button, List, ListItem, ListItemText, Switch } from '@mui/material';\n\n// function AdminPanel() {\n//   const [accounts, setAccounts] = useState([]);\n\n//   useEffect(() => {\n//     // Load accounts from Local Storage\n//     const loadedAccounts = JSON.parse(localStorage.getItem('users')) || [];\n//     setAccounts(loadedAccounts);\n//   }, []);\n\n//   const toggleAccountStatus = (email) => {\n//     // const accounts = JSON.parse(localStorage.getItem('users')) || [];\n//     const updatedAccounts = accounts.map(account => {\n//       if (account.email === email) {\n//         return { ...account, disabled: !account.disabled };\n//       }\n//       return account;\n//     });\n  \n//     localStorage.setItem('users', JSON.stringify(updatedAccounts));\n//   };\n  \n\n//   const handleToggle = (email) => {\n//     toggleAccountStatus(email);\n//     // Refresh accounts list\n//     setAccounts(JSON.parse(localStorage.getItem('users')) || []);\n//   };\n\n//   console.log(accounts)\n\n\n//   return (\n//     <List>\n//       {accounts.map((account, index) => (\n//         <ListItem key={index}>\n//           <ListItemText primary={account.email} secondary={account.disabled ? 'Disabled' : 'Enabled'} />\n//           <Switch\n//             checked={!account.disabled}\n//             onChange={() => handleToggle(account.email)}\n//             color=\"primary\"\n//           />\n//         </ListItem>\n//       ))}\n//     </List>\n//   );\n// }\n\n// export default AdminPanel;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Card, CardContent, List, ListItem, ListItemText, Switch, Divider, Container, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminPanel() {\n  const [accounts, setAccounts] = useState([]);\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // Load accounts from Local Storage\n    const loadedAccounts = JSON.parse(localStorage.getItem('users')) || [];\n    setAccounts(loadedAccounts);\n  }, []);\n\n  const toggleAccountStatus = (email) => {\n    const updatedAccounts = accounts.map(account => {\n      if (account.email === email) {\n        return { ...account, disabled: !account.disabled };\n      }\n      return account;\n    });\n  \n    localStorage.setItem('users', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts); // Update state to reflect changes\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ marginTop: 4, textAlign: 'center' }}>\n        Admin Dashboard\n      </Typography>\n      <Card raised sx={{ marginTop: 2 }}>\n        <CardContent>\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom sx={{ fontWeight: 'bold' }}>\n            Users Info\n          </Typography>\n          <List>\n            {accounts.map((account, index) => (\n              <React.Fragment key={index}>\n                <ListItem>\n                  <ListItemText primary={account.email} secondary={account.disabled ? 'Disabled' : 'Enabled'} />\n                  <Switch\n                    checked={!account.disabled}\n                    onChange={() => toggleAccountStatus(account.email)}\n                    color=\"primary\"\n                  />\n                </ListItem>\n                {index < accounts.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n\n      <Button variant=\"contained\" onClick={()=>navigate('/')} sx={{ marginBottom: 2, marginTop:3 }}>Back to Homepage</Button>\n\n\n    </Container>\n  );\n}\n\nexport default AdminPanel;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}